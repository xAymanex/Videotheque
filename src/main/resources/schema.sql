-- Nettoyage (ordre inverse des FK)
DROP TABLE IF EXISTS movie_actor;
DROP TABLE IF EXISTS movie;
DROP TABLE IF EXISTS director;
DROP TABLE IF EXISTS actor;
DROP TABLE IF EXISTS genre;

-- Tables de référence
CREATE TABLE director (
                          id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                          name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE actor (
                       id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE genre (
                       id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       name VARCHAR(255) NOT NULL UNIQUE
);

-- Table movie (genre_id est NOT NULL -> il faut TOUJOURS le fournir)
CREATE TABLE movie (
                       id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                       title            VARCHAR(255) NOT NULL,
                       release_year     INT,
                       duration_minutes INT,
                       director_id      BIGINT NOT NULL,
                       genre_id         BIGINT NOT NULL,
                       CONSTRAINT fk_movie_director FOREIGN KEY (director_id) REFERENCES director(id),
                       CONSTRAINT fk_movie_genre    FOREIGN KEY (genre_id)    REFERENCES genre(id)
);

-- Table de jointure N-N
CREATE TABLE movie_actor (
                             movie_id BIGINT NOT NULL,
                             actor_id BIGINT NOT NULL,
                             PRIMARY KEY (movie_id, actor_id),
                             CONSTRAINT fk_ma_movie FOREIGN KEY (movie_id) REFERENCES movie(id) ON DELETE CASCADE,
                             CONSTRAINT fk_ma_actor FOREIGN KEY (actor_id) REFERENCES actor(id) ON DELETE CASCADE
);

-- Index utiles
CREATE INDEX idx_movie_title        ON movie(title);
CREATE INDEX idx_movie_release_year ON movie(release_year);
CREATE INDEX idx_movie_genre        ON movie(genre_id);
